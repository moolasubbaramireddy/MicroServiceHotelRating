server:
  port: 8081

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microserviceshotel
    username: root
    password: Subbu949166@
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate: org.hibernate.dialect.MySQL*Dialect
  application:
    name: USER-SERVICE
  config:
    import: configserver:http://localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-62844766.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client-credentials
            scope: internal
            client-id: 0oacwx5xu9pjqpEId5d7
            client-secret: t8s-c_9omCxazARkf3WEkGePNik2QVoMtMIddJ10S6mvqZ1QZIZmX1mhoWRO6QCP

        provider:
          okta:
            issuer-uri: https://dev-62844766.okta.com/oauth2/default
#spring security configration line number 21 to 37

#     spring.config.import=configserver:http://localhost:8085
#  profiles:
#     active: dev
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka
#
#actuator configration till 47 line
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health



  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 6000ms
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 10


  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 2
        timeoutDuration: 2s


#okta configration

okta:
  oauth2:
    issuer: https://dev-62844766.okta.com/oauth2/default
    audience: api://default
